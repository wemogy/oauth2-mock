name: Release

on:
  workflow_dispatch:
    inputs:
      pre-release:
        description: Genereates a Pre-Release when checked
        type: boolean
        required: false
        default: false
  push:
    branches:
      - release/**

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      # Override version with the manually provided version if available
      next-version: ${{ steps.release-version.outputs.next-version }}${{ github.event.inputs.version && 'pre' || '' }}
      next-version-name: ${{ steps.release-version.outputs.next-version-name }}${{ github.event.inputs.version && 'pre' || '' }}
    steps:
      - name: Get version for next release
        if: ${{ github.event.inputs.version == '' }}
        uses: wemogy/release-version-action@2.0.2
        id: release-version
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  containers:
    name: Build and push Container image
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Azure Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.CONTAINER_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
      - name: Build Containers
        uses: ./.github/actions/containers
        with:
          container-registry-server: ${{ secrets.CONTAINER_REGISTRY_LOGIN_SERVER }}
          wemogy-packages-token: ${{ secrets.WEMOGY_PACKAGES_TOKEN }}
          version: ${{ needs.setup.outputs.next-version }}
          push: true

  github-release:
    name: Create GitHub Release
    needs:
      - setup
      - containers
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Version ${{ needs.setup.outputs.next-version }}
          tag_name: ${{ needs.setup.outputs.next-version-name }}
          prerelease: ${{ github.event.inputs.pre-release || false }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
